name: Deploy to Github Pages

on:
  push:
    branches:
      - main
env:
  CACHE_ENABLED: ${{secrets.CACHE_ENABLED}}
  MEETUP_GRAPHQL_ENDPOINT: ${{secrets.MEETUP_GRAPHQL_ENDPOINT}}
  MEETUP_GROUP_ID: ${{secrets.MEETUP_GROUP_ID}}
  SITE_URL: ${{secrets.SITE_URL}}

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  align-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  tests:
    runs-on: ubuntu-latest
    needs: align-code
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Test
        run: |
          yarn install        
          yarn test
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Build
        run: |
          yarn install
          yarn export
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./out
# We'll activate this part when we'll decide domain
# sitemaps:
#   runs-on: ubuntu-latest
# steps:
#   - name: Google
#     uses: wei/curl@master
#     with:
#       args: http://www.google.com/webmasters/tools/ping?sitemap=${{ env.SITEMAP_URL }}
#   - name: Bing
#     uses: wei/curl@master
#     with:
#       args: http://www.bing.com/webmaster/ping.aspx?siteMap=${{ env.SITEMAP_URL }}
